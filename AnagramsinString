T.c --> O(m+n)
S.c --> O(1)

class Solution {
    public List<Integer> findAnagrams(String s, String p) {
        List<Integer> result = new ArrayList<>();
        if(s == null || s.length() == 0 || s.length() < p.length()){
            return result;
        }
        HashMap<Character,Integer> map = new HashMap<>();
        int match = 0;
        for(int i =0; i<p.length(); i++){
            map.put(p.charAt(i),map.getOrDefault(p.charAt(i),0)+1);
        }
        for(int i = 0; i<s.length(); i++){
            //incoming
            if(map.containsKey(s.charAt(i))){
                int count = map.get(s.charAt(i));
                count--;
                if(count == 0){
                  match++;
                }
                map.put(s.charAt(i),count);
            }
            //outgoing
            if(i>=p.length()){
                 if(map.containsKey(s.charAt(i-p.length()))){
                    int count = map.get(s.charAt(i-p.length()));
                    count++;
                    if(count == 1){
                      match--;
                    }
                    map.put(s.charAt(i-p.length()),count);
                 }
            }
           if(match == map.size()){
            result.add(i-p.length()+1);
           }            
        }
        return result;
    }
}